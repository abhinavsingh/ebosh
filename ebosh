#!/bin/sh

COMMAND=$1
ERL=`which erl`
ERL_OPTS="-pa deps/*/ebin -pa ebin"
EXEC="$ERL $ERL_OPTS"

## erlang cookie and node name
COOKIE_OPTS=`grep '^-setcookie' vm.args`
NODE=`egrep '^-s?name' vm.args | cut -f2 -d' '`

REBAR=./rebar
REBAR_URL=http://cloud.github.com/downloads/basho/rebar/rebar

case $COMMAND in
	
	start)
		echo "starting ebosh ..."
		$EXEC \
		-args_file vm.args \
		-config ebosh.config \
		-s ebosh \
		-noshell \
		-detached
		;;
	
	restart)
		$0 stop
		$0 start
		;;
	
	stop)
		echo "stopping ebosh ..."
		$EXEC \
		-name "stop-$NODE" \
		$COOKIE_OPTS \
		-eval "rpc:call('$NODE', init, stop, [])" \
		-noshell \
		-hidden \
		-s init stop
		;;
	
	ctl)
		echo "entering ebosh console ..."
		$EXEC \
		-name "attach-$NODE" \
		$COOKIE_OPTS \
		-remsh $NODE \
		-hidden
		;;
	
	ping)
		echo "pinging $NODE ..."
		$EXEC \
		-name "ping-$NODE" \
		$COOKIE_OPTS \
		-eval \
		"case net_adm:ping('$NODE') of \
			pong -> io:fwrite(\"running~n\",[]); \
			pang -> io:fwrite(\"not running~n\",[]) \
		end" \
		-noshell \
		-hidden \
		-s init stop
		;;
	
	compile)
		$REBAR compile
		;;
		
	clean)
		$REBAR clean
		;;
		
	test)
		$REBAR skip_deps=true eunit
		;;
	
	deps)
		$REBAR get-deps
		;;
		
	update)
		$REBAR update-deps
		;;
		
	rebar)
		wget -q -O $REBAR $REBAR_URL
		chmod u+x $REBAR
		;;
	
	*)
		echo "Usage: $0 {start|restart|stop|ctl|ping|compile|clean|test|deps|update|rebar}"
		exit 1

esac

exit 0